{"ast":null,"code":"var _jsxFileName = \"/Users/jainovennatt/Documents/UT/EE461L/EE461L_IDB/test_react_book/test_react_book/src/components2/Author.jsx\";\nimport React from \"react\";\nimport Recommendations from \"./Recommendations\";\nimport Description from \"./Description\";\nimport Header from \"./Header\";\n/*\nprops passed in should describe what author this Author is\ncurrently we use author name because it is unique within our DB but might need to be changed\n*/\n\nclass Author extends React.Component {\n  constructor(props) {\n    super(props);\n    const myQuery = new URLSearchParams(window.location.search); // setup state\n\n    this.state = {\n      authorName: myQuery.get(\"name\"),\n      //\"default author name\",\n      authorPicture: \"https://clipartsworld.com/images/book-of-shadows-clipart-11.jpg\",\n      authorBio: \"\",\n      bookRecommendations: [{\n        picture: \"https://clipartsworld.com/images/book-of-shadows-clipart-11.jpg\",\n        ISBN: 1\n      }, {\n        picture: \"https://clipartsworld.com/images/book-of-shadows-clipart-11.jpg\",\n        ISBN: 2\n      }, {\n        picture: \"https://clipartsworld.com/images/book-of-shadows-clipart-11.jpg\",\n        ISBN: 3\n      }, {\n        picture: \"https://clipartsworld.com/images/book-of-shadows-clipart-11.jpg\",\n        ISBN: 4\n      }, {\n        picture: \"https://clipartsworld.com/images/book-of-shadows-clipart-11.jpg\",\n        ISBN: 5\n      }, {\n        picture: \"https://clipartsworld.com/images/book-of-shadows-clipart-11.jpg\",\n        ISBN: 6\n      }]\n    };\n  }\n\n  componentDidMount() {\n    // make call to server to get information and modify state using setState\n    const params = new URLSearchParams(window.location.search);\n    fetch(\"http://34.71.147.72:80/author?\" + params).then(result => result.json()).then(data => {\n      this.setState({\n        authorName: data.author,\n        authorPicture: data.imageLink\n      });\n    });\n    fetch(\"http://34.71.147.72:80/authorsBooks?\" + params, {\n      method: \"GET\"\n    }).then(response => response.json()).then(data => {\n      var recommendations = [];\n\n      for (var i = 0; i < data.pageOfItems.length; i++) {\n        recommendations.push({\n          picture: data.pageOfItems[i].volumeInfo.imageLinks.thumbnail,\n          ISBN: data.pageOfItems[i].volumeInfo.industryIdentifiers.identifier\n        });\n      }\n\n      this.setState({\n        bookRecommendations: recommendations\n      });\n    });\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: this.state.authorName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Description, {\n      description: this.state.authorBio,\n      image: this.state.authorPicture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Recommendations, {\n      recommendations: this.state.bookRecommendations,\n      typeOfRecommendation: \"Books by this author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Author;","map":{"version":3,"sources":["/Users/jainovennatt/Documents/UT/EE461L/EE461L_IDB/test_react_book/test_react_book/src/components2/Author.jsx"],"names":["React","Recommendations","Description","Header","Author","Component","constructor","props","myQuery","URLSearchParams","window","location","search","state","authorName","get","authorPicture","authorBio","bookRecommendations","picture","ISBN","componentDidMount","params","fetch","then","result","json","data","setState","author","imageLink","method","response","recommendations","i","pageOfItems","length","push","volumeInfo","imageLinks","thumbnail","industryIdentifiers","identifier","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Recommendations from \"./Recommendations\";\nimport Description from \"./Description\";\nimport Header from \"./Header\";\n/*\nprops passed in should describe what author this Author is\ncurrently we use author name because it is unique within our DB but might need to be changed\n*/\nclass Author extends React.Component {\n  constructor(props) {\n    super(props);\n    const myQuery = new URLSearchParams(window.location.search);\n    // setup state\n    this.state = {\n      authorName: myQuery.get(\"name\"), //\"default author name\",\n      authorPicture:\n        \"https://clipartsworld.com/images/book-of-shadows-clipart-11.jpg\",\n      authorBio: \"\",\n      bookRecommendations: [\n        {\n          picture:\n            \"https://clipartsworld.com/images/book-of-shadows-clipart-11.jpg\",\n          ISBN: 1\n        },\n        {\n          picture:\n            \"https://clipartsworld.com/images/book-of-shadows-clipart-11.jpg\",\n          ISBN: 2\n        },\n        {\n          picture:\n            \"https://clipartsworld.com/images/book-of-shadows-clipart-11.jpg\",\n          ISBN: 3\n        },\n        {\n          picture:\n            \"https://clipartsworld.com/images/book-of-shadows-clipart-11.jpg\",\n          ISBN: 4\n        },\n        {\n          picture:\n            \"https://clipartsworld.com/images/book-of-shadows-clipart-11.jpg\",\n          ISBN: 5\n        },\n        {\n          picture:\n            \"https://clipartsworld.com/images/book-of-shadows-clipart-11.jpg\",\n          ISBN: 6\n        }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    // make call to server to get information and modify state using setState\n    const params = new URLSearchParams(window.location.search);\n\n    fetch(\"http://34.71.147.72:80/author?\" + params)\n      .then(result => result.json())\n      .then(data => {\n        this.setState({\n          authorName: data.author,\n          authorPicture: data.imageLink\n        });\n      });\n    fetch(\"http://34.71.147.72:80/authorsBooks?\" + params, { method: \"GET\" })\n      .then(response => response.json())\n      .then(data => {\n        var recommendations = [];\n        for (var i = 0; i < data.pageOfItems.length; i++) {\n          recommendations.push({\n            picture: data.pageOfItems[i].volumeInfo.imageLinks.thumbnail,\n            ISBN: data.pageOfItems[i].volumeInfo.industryIdentifiers.identifier\n          });\n        }\n        this.setState({ bookRecommendations: recommendations });\n      });\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header title={this.state.authorName} />\n        <br />\n        <Description\n          description={this.state.authorBio}\n          image={this.state.authorPicture}\n        />\n        <Recommendations\n          recommendations={this.state.bookRecommendations}\n          typeOfRecommendation={\"Books by this author\"}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Author;\n"]},"metadata":{},"sourceType":"module"}
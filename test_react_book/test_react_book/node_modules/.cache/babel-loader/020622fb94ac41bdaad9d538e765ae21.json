{"ast":null,"code":"var _jsxFileName = \"/Users/jainovennatt/Documents/UT/EE461L/EE461L_IDB/test_react_book/test_react_book/src/components2/Recommendations.jsx\";\nimport React from \"react\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Carousel from \"react-material-ui-carousel\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nclass Recommendations extends React.Component {\n  reformatArrayAsMatrix(arr, sizeOfRow) {\n    let matrix = [];\n    let i, j;\n\n    for (i = 0; i < arr.length; i += sizeOfRow) {\n      let rowMatrix = [];\n\n      for (j = 0; j < sizeOfRow && i + j < arr.length; j++) {\n        rowMatrix.push(arr[i + j]);\n      }\n\n      matrix.push(rowMatrix);\n    }\n\n    return matrix;\n  }\n\n  render() {\n    const img_alt_text = \"Default\";\n    const numImgsPerCarousel = 3; // must divide 12, since that is gridsize number\n\n    let formattedRecommendations = this.reformatArrayAsMatrix(this.props.recommendations, numImgsPerCarousel);\n    console.log(\"in recommendations\");\n    console.log(formattedRecommendations);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \"Recommended Books\"), /*#__PURE__*/React.createElement(Carousel, {\n      animation: \"slide\",\n      autoPlay: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, formattedRecommendations.map((recommendationRow, indexRow) => /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, recommendationRow.map((recommendationCol, indexCol) => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12 / numImgsPerCarousel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      underline: \"none\",\n      component: RouterLink,\n      to: \"/book?isbn=\" + recommendationCol[\"ISBN\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      component: \"img\",\n      height: \"550\",\n      image: recommendationCol[\"picture\"],\n      alt: img_alt_text + (indexRow * numImgsPerCarousel + indexCol).toString(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }))))))));\n  }\n\n}\n\nexport default Recommendations;","map":{"version":3,"sources":["/Users/jainovennatt/Documents/UT/EE461L/EE461L_IDB/test_react_book/test_react_book/src/components2/Recommendations.jsx"],"names":["React","CardMedia","Grid","Carousel","Link","RouterLink","Recommendations","Component","reformatArrayAsMatrix","arr","sizeOfRow","matrix","i","j","length","rowMatrix","push","render","img_alt_text","numImgsPerCarousel","formattedRecommendations","props","recommendations","console","log","map","recommendationRow","indexRow","recommendationCol","indexCol","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASA,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;;AAEA,MAAMC,eAAN,SAA8BN,KAAK,CAACO,SAApC,CAA8C;AAC5CC,EAAAA,qBAAqB,CAACC,GAAD,EAAMC,SAAN,EAAiB;AACpC,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,CAAJ,EAAOC,CAAP;;AACA,SAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,GAAG,CAACK,MAApB,EAA4BF,CAAC,IAAIF,SAAjC,EAA4C;AAC1C,UAAIK,SAAS,GAAG,EAAhB;;AACA,WAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,SAAJ,IAAiBE,CAAC,GAAGC,CAAJ,GAAQJ,GAAG,CAACK,MAAzC,EAAiDD,CAAC,EAAlD,EAAsD;AACpDE,QAAAA,SAAS,CAACC,IAAV,CAAeP,GAAG,CAACG,CAAC,GAAGC,CAAL,CAAlB;AACD;;AACDF,MAAAA,MAAM,CAACK,IAAP,CAAYD,SAAZ;AACD;;AACD,WAAOJ,MAAP;AACD;;AACDM,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG,SAArB;AACA,UAAMC,kBAAkB,GAAG,CAA3B,CAFO,CAEuB;;AAC9B,QAAIC,wBAAwB,GAAG,KAAKZ,qBAAL,CAC7B,KAAKa,KAAL,CAAWC,eADkB,EAE7BH,kBAF6B,CAA/B;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYJ,wBAAZ;AACA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,OAApB;AAA4B,MAAA,QAAQ,EAAE,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,wBAAwB,CAACK,GAAzB,CAA6B,CAACC,iBAAD,EAAoBC,QAApB,kBAC5B,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,iBAAiB,CAACD,GAAlB,CAAsB,CAACG,iBAAD,EAAoBC,QAApB,kBACrB,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,KAAKV,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,SAAS,EAAEd,UAFb;AAGE,MAAA,EAAE,EAAE,gBAAgBuB,iBAAiB,CAAC,MAAD,CAHvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,MAAM,EAAC,KAFT;AAGE,MAAA,KAAK,EAAEA,iBAAiB,CAAC,SAAD,CAH1B;AAIE,MAAA,GAAG,EACDV,YAAY,GACZ,CAACS,QAAQ,GAAGR,kBAAX,GAAgCU,QAAjC,EAA2CC,QAA3C,EANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADD,CADH,CADD,CADH,CAFF,CADF;AA8BD;;AApD2C;;AAuD9C,eAAexB,eAAf","sourcesContent":["import React from \"react\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Carousel from \"react-material-ui-carousel\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nclass Recommendations extends React.Component {\n  reformatArrayAsMatrix(arr, sizeOfRow) {\n    let matrix = [];\n    let i, j;\n    for (i = 0; i < arr.length; i += sizeOfRow) {\n      let rowMatrix = [];\n      for (j = 0; j < sizeOfRow && i + j < arr.length; j++) {\n        rowMatrix.push(arr[i + j]);\n      }\n      matrix.push(rowMatrix);\n    }\n    return matrix;\n  }\n  render() {\n    const img_alt_text = \"Default\";\n    const numImgsPerCarousel = 3; // must divide 12, since that is gridsize number\n    let formattedRecommendations = this.reformatArrayAsMatrix(\n      this.props.recommendations,\n      numImgsPerCarousel\n    );\n    console.log(\"in recommendations\");\n    console.log(formattedRecommendations);\n    return (\n      <React.Fragment>\n        <h1>Recommended Books</h1>\n        <Carousel animation=\"slide\" autoPlay={false}>\n          {formattedRecommendations.map((recommendationRow, indexRow) => (\n            <Grid container spacing={1}>\n              {recommendationRow.map((recommendationCol, indexCol) => (\n                <Grid item xs={12 / numImgsPerCarousel}>\n                  <Link\n                    underline=\"none\"\n                    component={RouterLink}\n                    to={\"/book?isbn=\" + recommendationCol[\"ISBN\"]}\n                  >\n                    <CardMedia\n                      component=\"img\"\n                      height=\"550\"\n                      image={recommendationCol[\"picture\"]}\n                      alt={\n                        img_alt_text +\n                        (indexRow * numImgsPerCarousel + indexCol).toString()\n                      }\n                    ></CardMedia>\n                  </Link>\n                </Grid>\n              ))}\n            </Grid>\n          ))}\n        </Carousel>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Recommendations;\n"]},"metadata":{},"sourceType":"module"}